{"version":3,"sources":["img/loading.gif","img/spoHome.gif","img/seaching.gif","component/LeftSide/LeftSideBar.js","component/Middle/Middle.js","component/RightSide/RightSide.js","component/ListTrack.js","component/Bottom/Bottom.js","component/Album/Album.js","component/Album/Home.js","component/Search/ListAlbums.js","component/Search/ListTracks.js","component/Search/TopResult.js","component/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LeftSideBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetch","then","response","json","data","setState","user","name","avatar","catch","e","console","log","state","recently","playing","choosing","menu","album","window","location","pathname","startsWith","inherits","createClass","key","value","nextProps","getAlbum","length","id","unshift","type","splice","millis","minutes","Math","floor","seconds","toFixed","index","_this2","react_default","a","createElement","className","alt","src","Link","to","onClick","changeMenu","viewBox","width","height","xmlns","d","fill","fillRule","href","map","item","index_es","icon","faArrowAltCircleDown","Component","Middle","token","accessToken","url","concat","headers","Content-Type","Accept","Authorization","artis","artists","cover","images","year","release_date","track","total_tracks","show","isLoad","loading","toggleShow","faEllipsisH","color","RightSide","tracks","items","duration_ms","converTime","getPlaying","preview_url","_this3","getTracks","faMusic","faCopyright","ListTrack","isPlay","choosenTrack","match","params","playStop","bind","assertThisInitialized","dataFromChild","style","component_Middle_Middle","component_RightSide_RightSide","audio","Audio","Bottom","artist","isPause","pause","play","coverImg","backgroundImage","faCheck","faRandom","faStepBackward","pauseTrack","faPlayCircle","faPause","faStepForward","faRetweet","role","aria-valuenow","aria-valuemin","aria-valuemax","faListAlt","faDesktop","faVolumeUp","Album","defineProperty","getData","Home","apply","arguments","logo","ListAlbums","ListTracks","TopResult","firstAlbum","slice","Search","searchSpotify","isSearch","searchInput","albums","isFound","replace","position","playerCheckInterval","searching","searched","beforeSearch","notFound","itemFound","changePosotion","Switch","Route","path","render","Search_ListAlbums","Search_ListTracks","Search_TopResult","placeholder","ref","input","spellCheck","onKeyPress","focus","spotifyApi","SpotifyWebApi","App","searchData","getHashParams","access_token","setAccessToken","hashParams","r","q","hash","substring","exec","decodeURIComponent","BrowserRouter","LeftSide_LeftSideBar","exact","component","component_Search_Search","component_ListTrack","assign","component_Album_Album","component_Bottom_Bottom","inputVal","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3420e445.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.3aaaadcf.gif\";","module.exports = __webpack_public_path__ + \"static/media/spoHome.276f273d.gif\";","module.exports = __webpack_public_path__ + \"static/media/seaching.e1482707.gif\";","import React, { Component } from 'react';\r\nimport './LeftSide.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowAltCircleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nexport class LeftSideBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            avatar: '',\r\n            recently: [],\r\n            playing: '',\r\n            choosing: 0,\r\n            menu: '',\r\n            album: ''\r\n        };\r\n\r\n        //Set active class for menu after reload match url \r\n        if (window.location.pathname.startsWith(\"/kinespotify/search\")) {\r\n            this.state.menu = 1;\r\n        }\r\n        else if (window.location.pathname.startsWith(\"/kinespotify/album\")) {\r\n            this.state.menu = 2;\r\n        }\r\n        else {\r\n            this.state.menu = 0;\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps.getAlbum)\r\n        if (nextProps.getAlbum !== '') {\r\n            // When recent list already has items\r\n            if (this.state.recently.length > 0) {\r\n                //When recent list has less than 5 items and no duplicate item in the first position\r\n                if (this.state.recently.length < 5 && this.state.recently[0].id !== nextProps.getAlbum.id) {\r\n                    //Add an item to the beginning\r\n                    this.state.recently.unshift({\r\n                        album: nextProps.getAlbum.name,\r\n                        type: nextProps.getAlbum.type,\r\n                        id: nextProps.getAlbum.id,\r\n                    })\r\n                }\r\n                //When recent list has equal or more than 5 items and no duplicate item in the first position\r\n                else if (this.state.recently.length >= 5 && this.state.recently[0].id !== nextProps.getAlbum.id) {\r\n                    //Remove the last item\r\n                    this.state.recently.splice(-1, 1);\r\n                    //Then add an item to the beginning\r\n                    this.state.recently.unshift({\r\n                        album: nextProps.getAlbum.name,\r\n                        type: nextProps.getAlbum.type,\r\n                        id: nextProps.getAlbum.id,\r\n                    });\r\n                }\r\n            }\r\n            //When recent list dosen't have any item\r\n            else {\r\n                this.state.recently.unshift({\r\n                    album: nextProps.getAlbum.name,\r\n                    type: nextProps.getAlbum.type,\r\n                    id: nextProps.getAlbum.id,\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    //Convert mili-sencond to minute\r\n    converTime(millis) {\r\n        let minutes = Math.floor(millis / 60000);\r\n        let seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n    //Change active of recently list and send items to parent component for changing playing albums to recently album\r\n\r\n    //Change active of menu\r\n    changeMenu(index) {\r\n        this.setState({\r\n            menu: index\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='left-container'>\r\n                <img className='logo' alt='spotify' src='https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png' />\r\n                <br /><br />\r\n\r\n                {/* Menu */}\r\n                <ul className='menu'>\r\n                    <Link to=\"/kinespotify/\">\r\n                        <li className={this.state.menu === 0 ? 'active-menu' : ''} onClick={() => this.changeMenu(0)}>\r\n                            <svg viewBox=\"0 0 512 512\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M448 463.746h-149.333v-149.333h-85.334v149.333h-149.333v-315.428l192-111.746 192 110.984v316.19z\" fill=\"currentColor\"></path></svg>\r\n                            &nbsp; &nbsp; Home\r\n                    </li>\r\n                    </Link>\r\n                    <Link to=\"/kinespotify/search\">\r\n                        <li className={this.state.menu === 1 ? 'active-menu' : ''} onClick={() => this.changeMenu(1)}>\r\n                            <svg viewBox=\"0 0 512 512\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M349.714 347.937l93.714 109.969-16.254 13.969-93.969-109.969q-48.508 36.825-109.207 36.825-36.826 0-70.476-14.349t-57.905-38.603-38.603-57.905-14.349-70.476 14.349-70.476 38.603-57.905 57.905-38.603 70.476-14.349 70.476 14.349 57.905 38.603 38.603 57.905 14.349 70.476q0 37.841-14.73 71.619t-40.889 58.921zM224 377.397q43.428 0 80.254-21.461t58.286-58.286 21.461-80.254-21.461-80.254-58.286-58.285-80.254-21.46-80.254 21.46-58.285 58.285-21.46 80.254 21.46 80.254 58.285 58.286 80.254 21.461z\" fill=\"currentColor\" fillRule=\"evenodd\"></path></svg>\r\n                            &nbsp; &nbsp; Search\r\n                    </li>\r\n                    </Link>\r\n                    <Link to=\"/kinespotify/album\">\r\n                        <li className={this.state.menu === 2 ? 'active-menu' : ''} onClick={() => this.changeMenu(2)}>\r\n                            <svg viewBox=\"0 0 512 512\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M291.301 81.778l166.349 373.587-19.301 8.635-166.349-373.587zM64 463.746v-384h21.334v384h-21.334zM192 463.746v-384h21.334v384h-21.334z\" fill=\"currentColor\"></path></svg>\r\n                            &nbsp; &nbsp; Your Library\r\n                        </li >\r\n                    </Link>\r\n                    <p></p>\r\n                    <a href='https://accounts.spotify.com/authorize?client_id=aa77e29bdb474ea5b8904a547d2af510&response_type=token&Foauth_callback%2F&scope=streaming user-read-playback-state user-read-currently-playing user-library-read user-modify-playback-state&redirect_uri=https:%2F%2Fkinesisms.github.io%2Fkinespotify' >\r\n                        <li>\r\n                            <svg width=\"24\" height=\"24\" viewBox=\"0 0 80 90\" xmlns=\"http://www.w3.org/2000/svg\"><title>User Icon</title><path d=\"M67.74 61.78l-14.5-8.334c-.735-.422-1.24-1.145-1.385-1.98-.145-.835.088-1.685.638-2.33l5.912-6.93c3.747-4.378 5.81-9.967 5.81-15.737v-2.256c0-6.668-2.792-13.108-7.658-17.67C51.622 1.92 45.17-.386 38.392.054c-12.677.82-22.607 11.772-22.607 24.934v1.483c0 5.77 2.063 11.36 5.81 15.736l5.912 6.933c.55.644.783 1.493.638 2.33-.143.834-.648 1.556-1.383 1.98l-14.494 8.33C4.7 66.077 0 74.15 0 82.844v6.76h3.333v-6.76c0-7.5 4.055-14.46 10.59-18.174l14.5-8.334c1.597-.918 2.692-2.487 3.007-4.302.315-1.815-.19-3.66-1.387-5.06l-5.913-6.936c-3.23-3.775-5.01-8.594-5.01-13.57v-1.484c0-11.41 8.562-20.9 19.488-21.608 5.85-.377 11.415 1.61 15.67 5.598 4.26 3.992 6.605 9.404 6.605 15.24v2.254c0 4.976-1.778 9.796-5.01 13.57l-5.915 6.935c-1.195 1.4-1.7 3.246-1.386 5.06.313 1.816 1.41 3.385 3.008 4.303l14.507 8.338c6.525 3.71 10.58 10.67 10.58 18.17v6.76H80v-6.76c0-8.695-4.7-16.768-12.26-21.063z\" fill=\"currentColor\" fillRule=\"evenodd\"></path></svg>\r\n                            &nbsp; &nbsp; Get access\r\n                    </li>\r\n                    </a>\r\n                </ul>\r\n\r\n                {/* RECENTLY List */}\r\n                <h6 className='recently'>RECENTLY PLAYED</h6>\r\n                <div className='scrolling'>\r\n                    <ul className=\"list-unstyled inside-scroll\">\r\n                        {\r\n                            //List recently by map\r\n                            this.state.recently.map((item, index) => {\r\n                                //Condition for getting active class\r\n                                const className = this.state.choosing === index ? 'active-media' : '';\r\n                                return (\r\n                                    <li key={item.id}\r\n                                        className={'media ' + className}>\r\n                                        <Link to={\"/kinespotify/album/\" + item.id}>\r\n                                            <div className=\"media-body\">\r\n                                                <h5 className=\"mt-0 mb-1\">{item.album}</h5>\r\n                                                {item.type}\r\n                                            </div>\r\n                                        </Link>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className='bottom-thing'>\r\n                    <h6><FontAwesomeIcon className='icon' icon={faArrowAltCircleDown} /> Install App</h6>\r\n                    <div className='profile'>\r\n                        <img className='avatar' alt='avatar' src={this.state.avatar} />\r\n                        <div className='username'>{this.state.user}</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //Get avatar and user's name\r\n    componentDidMount = () => {\r\n        const url = `https://raw.githubusercontent.com/hailduong/lyduong/master/react-assignment/spotify/apis/userInfo.json`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    user: data.name,\r\n                    avatar: data.avatar,\r\n                });\r\n            })\r\n            .catch(e => console.log('error', e));\r\n    }\r\n}\r\n\r\nexport default LeftSideBar\r\n","import React, { Component } from 'react';\r\nimport './Middle.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\r\nimport loading from '../../img/loading.gif'\r\n\r\nexport class Middle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      artis: '',\r\n      cover: '',\r\n      year: '',\r\n      track: [],\r\n      show: false,\r\n      isLoad: true,\r\n      id: this.props.id\r\n    };\r\n\r\n    console.log(props);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.id) {\r\n      this.setState({\r\n        id: nextProps.id\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    //Loading view will display when data is getting\r\n    if (this.state.isLoad === false) {\r\n      return (\r\n        <div className='loading'>\r\n          <div className='img-load'>\r\n            <img className='imgLoad' src={loading} alt='loading' />\r\n            <h2>Loading...</h2>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n      //View after data is gotten\r\n    }\r\n    else {\r\n      return (\r\n        <div className='middle'>\r\n          <img className='cover' alt='cover' src={this.state.cover} />\r\n          <h2>{this.state.name}</h2>\r\n          <h6 className='actor'>{this.state.artis}</h6>\r\n          {/* Toggle PLay/Stop button */}\r\n          {this.state.show ? <button onClick={this.toggleShow} type=\"button\" className=\"btn btn-success\">PLAY</button> : <button onClick={this.toggleShow} type=\"button\" className=\"btn btn-danger\">STOP</button>}\r\n          <br />\r\n          <h6 className='actor'>{this.state.year} . {this.state.track} SONGS</h6>\r\n          <div className='remove'>\r\n            <h6>REMOVE FROM YOUR LIBRARY</h6>\r\n            <FontAwesomeIcon className='icon' icon={faEllipsisH} color=\"#ddd\" />\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  // Re-get data by album ID, use this function for reload at the same Url, we still have link's ID\r\n  componentDidMount = () => {\r\n    const token = this.props.accessToken;\r\n    const url = `https://api.spotify.com/v1/albums/${this.state.id}`;\r\n    fetch(url, {\r\n      //config header\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Accept\": \"application/json\",\r\n        \"Authorization\": `Bearer ${token}`,\r\n      }\r\n    })\r\n      .then(response => response.json()).then(data => {\r\n        console.log(data);\r\n        this.setState({\r\n          name: data.name,\r\n          artis: data.artists[0].name,\r\n          cover: data.images[0].url,\r\n          year: data.release_date,\r\n          track: data.total_tracks\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\nexport default Middle\r\n","import React, { Component } from 'react';\r\nimport './RigthSide.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCopyright, faMusic } from '@fortawesome/free-solid-svg-icons';\r\nimport loading from '../../img/loading.gif'\r\n\r\nexport class RightSide extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tracks: [],\r\n            playing: 0,\r\n            album: '',\r\n            isLoad: false,\r\n            id: this.props.id\r\n        };\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps)\r\n        if(nextProps.id){\r\n            this.setState({\r\n                id: nextProps.id\r\n            })\r\n        }\r\n    }\r\n\r\n    //Convert track's duration to minute\r\n    converTime(millis) {\r\n        let minutes = Math.floor(millis / 60000);\r\n        let seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n    //Get track info and send to parent conponent when clicking on a track\r\n    getTracks(index,item) {\r\n        //Set active class for that track\r\n        this.setState({\r\n            playing: index\r\n        }, () => {\r\n            //Data for sending to parent component\r\n            this.props.getPlaying({\r\n                name: item.name,\r\n                album: this.state.album,\r\n                duration_ms: item.duration_ms,\r\n                artists: item.artists,\r\n                preview_url: item.preview_url\r\n\r\n            })\r\n        });\r\n    }\r\n    render() {\r\n        //Loading view will appear when data is getting\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div className='loading'>\r\n                    <div className='img-load'>\r\n                        <img className='imgLoad' src={loading} alt='loading' />\r\n                        <h2>Loading...</h2>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        //View after data is gotten\r\n        else {\r\n            return (\r\n                <div className='right-side'>\r\n                    <div className='hide-bar'>\r\n                        <ul>\r\n                            {//Get list tracks\r\n                                this.state.tracks.map((item, index) => {\r\n                                    const className = this.state.playing === index ? 'active' : '';\r\n                                    return (\r\n                                        <li key={item.id}\r\n                                            onClick={() => this.getTracks(index,item)}\r\n                                            className={className}>\r\n                                            <FontAwesomeIcon className='icon' icon={faMusic} />\r\n                                            <div className='song-name'>{item.name}</div>\r\n                                            <div className='duration'>{item.duration_ms}</div>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className='copyright'>\r\n                        <p><FontAwesomeIcon className='icon' icon={faCopyright} color=\"#ddd\" /> 1999 ACT Music + Vision GmbH + Co KG</p>\r\n                        <p><FontAwesomeIcon className='icon' icon={faCopyright} color=\"#ddd\" /> 1999 ACT Music + Vision GmbH + Co KG</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    //Re-get data when reload at the same url\r\n    componentDidMount = () => {\r\n        // Get list tracks by url ID\r\n        const token = this.props.accessToken;\r\n        const url = `https://api.spotify.com/v1/albums/${this.state.id}`;\r\n        fetch(url, {\r\n            //config header\r\n            headers: {\r\n                \"Authorization\": `Bearer ${token}`,\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                data.tracks.items.map(item => {\r\n                    item.duration_ms = this.converTime(item.duration_ms);\r\n                });\r\n                this.setState({\r\n                    isLoad: true,\r\n                    tracks: data.tracks.items,\r\n                    album: data\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport default RightSide\r\n","import React, { Component } from 'react';\r\nimport Middle from '../component/Middle/Middle';\r\nimport RightSide from '../component/RightSide/RightSide';\r\n\r\nexport class ListTrack extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPlay: '',\r\n            choosenTrack: '',\r\n            id: this.props.match.params.id\r\n        };\r\n        this.playStop = this.playStop.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.match.params.id) {\r\n            this.setState({\r\n                id: nextProps.match.params.id\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    playStop(dataFromChild) {\r\n        if (dataFromChild === true) {\r\n            this.setState({\r\n                isPlay: dataFromChild,\r\n            }, () => console.log(this.state));\r\n        }\r\n        else if (dataFromChild === false) {\r\n            this.setState({\r\n                isPlay: dataFromChild,\r\n            }, () => console.log(this.state));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            height: '100%',\r\n            width: '100%'\r\n        };\r\n        return (   \r\n            <div style={style} className='row'>\r\n                <div className='col-md-5'>\r\n                    <Middle album={this.props.album} id={this.state.id} accessToken={this.props.accessToken} />\r\n                </div>\r\n                <div className='col-md-7'>\r\n                    <RightSide getPlaying={this.props.getPlaying} id={this.state.id} accessToken={this.props.accessToken} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTrack\r\n","import React, { Component } from 'react';\r\nimport './Bottom.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPause, faCheck, faRandom, faStepBackward, faStepForward, faPlayCircle, faRetweet, faListAlt, faDesktop, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlet audio = new Audio();\r\nexport class Bottom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            artist: '',\r\n            cover: '',\r\n            track: '',\r\n            playing: '',\r\n            isPause: true\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n\r\n        if (nextProps.playing !== \"\") {\r\n            console.log(nextProps.playing);\r\n            if (this.state.playing !== nextProps.playing.preview_url) {\r\n                this.setState({\r\n                    artist: nextProps.playing.artists[0].name,\r\n                    cover: nextProps.playing.album.images[0].url,\r\n                    playing: nextProps.playing.preview_url,\r\n                    track: nextProps.playing.name,\r\n                    isPause: false\r\n                }, () => {\r\n                    if(this.state.isPause === false){\r\n                        if (audio) {\r\n                            audio.pause();\r\n                        }\r\n                        audio = new Audio(this.state.playing);\r\n                        audio.play()\r\n                    }\r\n                });\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    pauseTrack() {\r\n        if(this.state.playing !== ''){\r\n            if (this.state.isPause) {\r\n                this.setState({\r\n                    isPause: false\r\n                }, () => audio.play())\r\n            }\r\n            else {\r\n                this.setState({\r\n                    isPause: true\r\n                }, () => audio.pause())\r\n            }\r\n        }    \r\n    }\r\n\r\n    render() {\r\n        //style for setting cover on player bar\r\n        const coverImg = {\r\n            backgroundImage: `url(${this.state.cover})`\r\n        };\r\n        return (\r\n\r\n            <div className='bottom row'>\r\n                {/* Info side */}\r\n                <div className='info col-md-4'>\r\n                    <div style={coverImg} className='cover'>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h5>{this.state.track}</h5>\r\n                        <h6>{this.state.artist}</h6>\r\n                    </div>\r\n                    <FontAwesomeIcon className='icon checkIcon' icon={faCheck} color=\"#439e65\" />\r\n                </div>\r\n\r\n                {/* Control side */}\r\n                <div className='col-md-5 play-bar'>\r\n                    <div className='control-button'>\r\n                        <FontAwesomeIcon className='icon' icon={faRandom} />\r\n                        <FontAwesomeIcon className='icon' icon={faStepBackward} />\r\n                        {\r\n                            this.state.isPause ?\r\n                                <FontAwesomeIcon onClick={() => { this.pauseTrack() }} className='icon play-btn' icon={faPlayCircle} />\r\n                                :\r\n                                <FontAwesomeIcon onClick={() => {this.pauseTrack() }} className='icon play-btn' icon={faPause} />\r\n                        }\r\n\r\n\r\n                        <FontAwesomeIcon className='icon' icon={faStepForward} />\r\n                        <FontAwesomeIcon className='icon' icon={faRetweet} />\r\n\r\n                    </div>\r\n                    <div className='bar'>\r\n                        <span>00:00</span>\r\n                        <div className=\"progress\">\r\n                            <div className=\"progress-bar w-75\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                        <span>00:30</span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* Option side */}\r\n                <div className='col-md-3 control-thing'>\r\n                    <FontAwesomeIcon className='icon' icon={faListAlt} />\r\n                    <FontAwesomeIcon className='icon' icon={faDesktop} />\r\n                    <FontAwesomeIcon className='icon' icon={faVolumeUp} />\r\n                    <div className=\"progress\">\r\n                        <div className=\"progress-bar w-50\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Bottom\r\n","import React, { Component } from 'react';\r\nimport './Album.css';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport loading from '../../img/loading.gif'\r\n\r\nexport class Album extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            album: '',\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n    render() {\r\n\r\n        //Loading view appears while data is getting from API\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div className='loading'>\r\n                    <div className='img-load'>\r\n                        <img className='imgLoad' src={loading} alt='loading' />\r\n                        <h2>Loading...</h2>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n        //View after get data from API\r\n        else {\r\n            return (\r\n                <div className='album'>\r\n                    <h1>Albums</h1>\r\n                    <div className='row'>\r\n                        {//Get list albums by map\r\n                            this.state.album.map((item, index) => {\r\n                                return (\r\n                                    <div key={index} className='col-md-2'>\r\n                                        <Link to={\"/kinespotify/album/\" + item.album.id} onClick={() => this.props.getData(item.album)} >\r\n                                            <div className=\"card\">\r\n                                                <div className='album-wrap'>\r\n                                                    <img className=\"card-img-top\" src={item.album.images[0].url} alt=\"Cover\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"card-body\">\r\n                                                    <h6 className=\"card-title\">{item.album.name}</h6>\r\n                                                    <p className=\"card-text\">{item.album.artists[0].name}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Get item from API\r\n    componentDidMount = () => {\r\n        const token = this.props.accessToken;\r\n        const url = `https://api.spotify.com/v1/me/albums?limit=10&offset=0`;\r\n        fetch(url, {\r\n            //config header\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\",\r\n                \"Authorization\": `Bearer ${token}`,\r\n            }\r\n        }).then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                this.setState({\r\n                    isLoad: true,\r\n                    album: data.items,\r\n                    isLoad: true\r\n                })\r\n            })\r\n            .catch(e => {\r\n                console.log('error', e)\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport default Album\r\n","import React, { Component } from 'react';\r\nimport './Album.css';\r\nimport logo from '../../img/spoHome.gif'\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n        <h1>Welcome to Spotify</h1>\r\n        <img alt='logo' src={logo}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nconst ListAlbums = props => {\r\n    return (\r\n        <div className='row'>\r\n            {//Get list albums through props\r\n                props.items.map((item) => {\r\n                    return (\r\n                        <div key={item.id} className='col-md-2' >\r\n                            <Link to={\"/kinespotify/album/\" + item.id} onClick={() => props.getData(item)}>\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src={item.images[0].url} alt=\"Cover\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h6 className=\"card-title\">{item.name}</h6>\r\n                                        <p className=\"card-text\">{item.artists[0].name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListAlbums\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ListTracks = props => {\r\n    return (\r\n        <div className='right-side'>\r\n            <div className='hide-bar'>\r\n                <ul>\r\n                    {//Get list tracks through props then map it to every item\r\n                        props.items.map((item) => {\r\n                            return (\r\n                                <li key={item.id} onClick={() => {\r\n                                    props.getPlaying(item);\r\n                                }}>\r\n                                    <FontAwesomeIcon className='icon' icon={faMusic} />\r\n                                    <div className='song-name'>{item.name}</div>\r\n                                    <div className='duration'>{item.duration_ms}</div>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListTracks","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nconst TopResult = props => {\r\n    console.log(props.firstAlbum)\r\n    return (\r\n        <div className='row'>\r\n\r\n            <div className=\"col-md-4\">\r\n                <Link to={\"/kinespotify/album/\" + props.firstAlbum.id} onClick={() => props.getData(props.firstAlbum)}>\r\n                    <div className=\"card\">\r\n                        {/* Get the first album through props */}\r\n                        <img className=\"card-img-top\" src={props.firstAlbum.images[0].url} alt=\"Cover\" />\r\n                        <div className=\"card-body\">\r\n                            <h6 className=\"card-title\">{props.firstAlbum.name}</h6>\r\n                            <p className=\"card-text\">{props.firstAlbum.artists[0].name}</p>\r\n                        </div>\r\n                    </div>\r\n                </Link>\r\n\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                <div className='right-side'>\r\n                    <div className='hide-bar'>\r\n                        <ul>\r\n                            {//Get list tracks through props then map it to every item\r\n                                props.tracks.slice(0, 5).map((item) => {\r\n                                    return (\r\n                                        <li key={item.id}\r\n                                            onClick={() => {\r\n                                                props.getPlaying(item);\r\n                                            }}>\r\n                                            <FontAwesomeIcon className='icon' icon={faMusic} />\r\n                                            <div className='song-name'>{item.name}</div>\r\n                                            <div className='duration'>{item.duration_ms}</div>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopResult\r\n","import React, { Component } from 'react';\r\nimport './Search.css';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport searched from '../../img/seaching.gif';\r\n\r\n//Component\r\nimport ListAlbums from './ListAlbums';\r\nimport ListTracks from './ListTracks';\r\nimport TopResult from './TopResult';\r\n\r\nexport class Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            album: '',\r\n            tracks: '',\r\n            firstAlbum: '',\r\n            position: 1,\r\n            isSearch: false,\r\n            isFound: false,\r\n        };\r\n\r\n        this.playerCheckInterval = null;\r\n        //Set active class for menu after reload match url \r\n        if (window.location.pathname.startsWith(\"/kinespotify/search/songs\")) {\r\n            this.state.position = 2;\r\n        }\r\n        else if (window.location.pathname.startsWith(\"/kinespotify/search/albums\")) {\r\n            this.state.position = 3;\r\n        }\r\n        else {\r\n            this.state.position = 1;\r\n        }\r\n    }\r\n\r\n    //Convert track's duration to minute\r\n    converTime(millis) {\r\n        let minutes = Math.floor(millis / 60000);\r\n        let seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n    //Change tab's position \r\n    changePosotion(index) {\r\n        this.setState({\r\n            position: index\r\n        });\r\n    }\r\n\r\n    //Search function\r\n    searchSpotify = (e) => {\r\n        //Execute function when hit Enter button\r\n        if (e.key === \"Enter\") {\r\n            //Reset state when start to search and set state to \"Seaching\"\r\n            this.setState({\r\n                album: '',\r\n                tracks: '',\r\n                firstAlbum: '',\r\n                isSearch: true\r\n            },\r\n                //After that call search API\r\n                () => {\r\n                    //get access token\r\n                    const token = this.props.accessToken;\r\n                    console.log(token);\r\n                    const url = `https://api.spotify.com/v1/search?query=${this.searchInput.value}&limit=20&type=album,track`;\r\n                    fetch(url, {\r\n                        //config header\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Accept\": \"application/json\",\r\n                            \"Authorization\": `Bearer ${token}`,\r\n                        }\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            console.log(data.albums.items);\r\n                            //when items are not found\r\n                            if (data.albums.items.length < 1 || data.tracks.items.length < 1) {\r\n                                this.setState({\r\n                                    isFound: false,\r\n                                    firstAlbum: \"Haha thứ ngu\"\r\n                                }, () => console.log(this.state))\r\n                            }\r\n                            else {\r\n                                //Convert track's duration to minute\r\n                                let dataChangeType = data.tracks.items;\r\n                                dataChangeType.map((item) => {\r\n                                    item.duration_ms = this.converTime(item.duration_ms);\r\n                                });\r\n                                //When found any items\r\n                                this.setState({\r\n                                    album: data.albums.items,\r\n                                    tracks: data.tracks.items,\r\n                                    firstAlbum: data.albums.items[0],\r\n                                    isFound: true,\r\n                                    isSearch: false\r\n                                }, () => console.log(this.state))\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            //When access token expire. redirect to login page to get a new one\r\n                            window.location.replace(\"https://accounts.spotify.com/authorize?client_id=aa77e29bdb474ea5b8904a547d2af510&response_type=token&Foauth_callback%2F&scope=streaming user-read-playback-state user-read-currently-playing user-library-read user-modify-playback-state&redirect_uri=https:%2F%2Fkinesisms.github.io%2Fkinespotify\");\r\n                            console.log('Haha thứ ngu! Code để lỗi');\r\n                            console.log('error', e)\r\n                        });\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        // View while Search function is executing\r\n        const searching = (\r\n            <div className='searching'>\r\n                <div className='img-load'>\r\n                    <img className='img-size' alt='seaching' src={searched} />\r\n                    <h2>Searching...</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        //View before Search function executed\r\n        const beforeSearch = (\r\n            <div className='intro'>\r\n                <h1> Search Spotify</h1>\r\n                <h6>Find your favorite songs, artists, albums, podcasts and playlists</h6>\r\n            </div>\r\n        );\r\n        // View when API not found any items\r\n        const notFound = (\r\n            <div className='notFound'>\r\n                <h1>Not found</h1>\r\n            </div>\r\n        );\r\n\r\n        //View when API return any items\r\n        const itemFound = (\r\n            <div>\r\n                <div className='search-container'>\r\n                    <ul className='menu-search'>\r\n                        <Link className={this.state.position === 1 ? 'active' : ''} onClick={() => this.changePosotion(1)} to=\"/kinespotify/search\">\r\n                            <li>Top Results</li>\r\n                        </Link>\r\n                        <Link className={this.state.position === 2 ? 'active' : ''} onClick={() => this.changePosotion(2)} to=\"/kinespotify/search/songs\">\r\n                            <li>Songs</li>\r\n                        </Link>\r\n                        <Link className={this.state.position === 3 ? 'active' : ''} onClick={() => this.changePosotion(3)} to=\"/kinespotify/search/albums\">\r\n                            <li>Albums</li >\r\n                        </Link>\r\n                    </ul>\r\n                </div>\r\n                <div className='search-content'>\r\n                    <Switch>\r\n                        {//App will check if has data, then redirect to component\r\n\r\n                            //Searched albums component\r\n                            this.state.album !== '' && this.state.tracks !== '' ? <Route path=\"/kinespotify/search/albums\" render={() => <ListAlbums getData={this.props.getData} items={this.state.album} />} /> : <div></div>\r\n                        }\r\n                        {\r\n                            //Searched tracks component\r\n                            this.state.tracks !== '' && <Route path=\"/kinespotify/search/songs\" render={() => <ListTracks getPlaying={this.props.getPlaying} items={this.state.tracks} />} />\r\n                        }\r\n                        {\r\n                            //Top result component\r\n                            this.state.album !== '' && <Route path=\"/kinespotify/search\" render={() => <TopResult getPlaying={this.props.getPlaying} getData={this.props.getData} firstAlbum={this.state.firstAlbum} tracks={this.state.tracks} />} />\r\n                        }\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className='search'>\r\n\r\n\r\n                {/* Search bar */}\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" placeholder=\"Start typing ... (hit Enter to search)\"\r\n                        ref={(input) => { this.searchInput = input; }}\r\n                        spellCheck=\"false\"\r\n                        onKeyPress={this.searchSpotify}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    //Change view when API respone or not\r\n                    this.state.firstAlbum === '' ?\r\n                        <div className='containerSearching'>\r\n                            {// change view when status is seaching or not\r\n                                this.state.isSearch === true ? searching : beforeSearch\r\n                            }\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            {// change view when status is found or not found\r\n                                this.state.isFound === true ? itemFound : notFound\r\n                            }\r\n                        </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //Focus to search field after complete render\r\n    componentDidMount() {\r\n        this.searchInput.focus();\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SpotifyWebApi from 'spotify-web-api-js';\n//Component\nimport LeftSideBar from './component/LeftSide/LeftSideBar';\nimport ListTrack from './component/ListTrack';\nimport Bottom from './component/Bottom/Bottom';\nimport Album from './component/Album/Album';\nimport Home from './component/Album/Home';\nimport Search from './component/Search/Search';\nconst spotifyApi = new SpotifyWebApi();\nclass App extends Component {\n\n  constructor() {\n    super()\n    //get hashParam for access token\n    const params = this.getHashParams();\n    //get access token\n    const token = params.access_token;\n    spotifyApi.setAccessToken(token);\n    console.log(token)\n    this.state = {\n      album: '',\n      token: token,\n      playing: '',\n    };\n  }\n  //getAlbum function for getting data from child component\n  getPlaying = (playing) => {\n    this.setState({\n      playing: playing,\n    });\n  }\n\n  getData = (searchData) => {\n    this.setState({\n      album: searchData,\n    });\n  }\n\n  //get hashParam for access token\n  getHashParams() {\n    let hashParams = {};\n    let e, r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  render() {\n    return (\n      < Router >\n        {\n          this.state.token ?\n            <div className=\"App row\">\n              <div className='col-md-2'>\n                <LeftSideBar\n                  getAlbum={this.state.album}\n                />\n              </div>\n              <div className='col-md-10'>\n                <Switch >\n                  <Route exact path=\"/kinespotify/\" component={Home} />\n                  <Route path=\"/kinespotify/search\" render={() => <Search getPlaying={this.getPlaying} getData={this.getData} accessToken={this.state.token} />} />\n                  <Route path=\"/kinespotify/album/:id\" render={(props) => <ListTrack getPlaying={this.getPlaying} accessToken={this.state.token} {...props} />} />\n                  <Route path=\"/kinespotify/album\">\n                    <Album getData={this.getData} accessToken={this.state.token} />\n                  </Route>\n                </Switch >\n\n              </div>\n              <div className='player-bar'>\n                <Bottom playing={this.state.playing} inputVal={this.state} />\n              </div>\n            </div>\n\n            :\n\n            <div className='login'>\n            <h2>Welcome to Kine Spotify, please login to use Spotify</h2>\n              <a href='https://accounts.spotify.com/authorize?client_id=aa77e29bdb474ea5b8904a547d2af510&response_type=token&Foauth_callback%2F&scope=streaming user-read-playback-state user-read-currently-playing user-library-read user-modify-playback-state&redirect_uri=https:%2F%2Fkinesisms.github.io%2Fkinespotify'><button type=\"button\" className=\"btn btn-success\">Login</button></a>\n            </div>\n        }\n\n      </Router >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}