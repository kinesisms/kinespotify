{"version":3,"sources":["img/loading.gif","img/spoHome.gif","img/seaching.gif","component/LeftSide/LeftSideBar.js","component/Middle/Middle.js","component/RightSide/RightSide.js","component/ListTrack.js","component/Bottom/Bottom.js","component/Album/Album.js","component/Album/Home.js","component/Search/ListAlbums.js","component/Search/ListTracks.js","component/Search/TopResult.js","component/Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LeftSideBar","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","fetch","then","response","json","data","setState","user","name","avatar","catch","e","console","log","state","recently","playing","choosing","menu","album","window","location","pathname","startsWith","inherits","createClass","key","value","nextProps","length","getAlbum","unshift","type","id","cover","splice","millis","minutes","Math","floor","seconds","toFixed","index","item","_this2","url","concat","tracks","map","legnth","converTime","sendTracks","action","_this3","react_default","a","createElement","className","alt","src","Link","to","onClick","changeMenu","viewBox","width","height","xmlns","d","fill","fillRule","href","changeRecently","index_es","icon","faArrowAltCircleDown","Component","Middle","toggleShow","show","stateSend","choosenTrack","update","artis","artist","covers","large","year","track","isLoad","loading","faEllipsisH","color","RightSide","listTracks","albumID","inputVal","getTracks","faMusic","title","faCopyright","ListTrack","isPlay","playStop","bind","assertThisInitialized","dataFromChild","style","component_Middle_Middle","match","params","component_RightSide_RightSide","Bottom","defineProperty","clickBtn","number","coverImg","backgroundImage","faCheck","faRandom","changeTrack","faStepBackward","faPlayCircle","faStepForward","faRetweet","role","aria-valuenow","aria-valuemin","aria-valuemax","faListAlt","faDesktop","faVolumeUp","Album","getListTrack","Home","apply","arguments","logo","ListAlbums","items","images","artists","ListTracks","duration_ms","TopResult","firstAlbum","slice","Search","searchSpotify","isSearch","token","accessToken","searchInput","headers","Content-Type","Accept","Authorization","albums","isFound","replace","position","searching","searched","beforeSearch","notFound","itemFound","changePosotion","Switch","Route","path","render","Search_ListAlbums","Search_ListTracks","Search_TopResult","placeholder","ref","input","spellCheck","onKeyPress","focus","spotifyApi","SpotifyWebApi","App","getHashParams","access_token","setAccessToken","hashParams","r","q","hash","substring","exec","decodeURIComponent","BrowserRouter","LeftSide_LeftSideBar","exact","component","component_Search_Search","component_ListTrack","assign","component_Album_Album","component_Bottom_Bottom","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c7b8d93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.3aaaadcf.gif\";","module.exports = __webpack_public_path__ + \"static/media/spoHome.276f273d.gif\";","module.exports = __webpack_public_path__ + \"static/media/seaching.e1482707.gif\";","import React, { Component } from 'react';\r\nimport './LeftSide.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowAltCircleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\n\r\nexport class LeftSideBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: '',\r\n            avatar: '',\r\n            recently: [],\r\n            playing: '',\r\n            choosing: 0,\r\n            menu: '',\r\n            album: ''\r\n        };\r\n        \r\n        //Set active class for menu after reload match url \r\n        if(window.location.pathname.startsWith(\"/search\")){\r\n            this.state.menu = 1;\r\n        }\r\n        else if (window.location.pathname.startsWith(\"/album\")){\r\n            this.state.menu = 2;\r\n        }\r\n        else {\r\n            this.state.menu = 0;\r\n        }\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        //When recent list already has items\r\n        if (this.state.recently.length > 0) {\r\n            //When recent list has less than 5 items and no duplicate item in the first position\r\n            if (this.state.recently.length < 5 && this.state.recently[0].album !== nextProps.getAlbum.album.album) {\r\n                //Add an item to the beginning\r\n                this.state.recently.unshift({\r\n                    album: nextProps.getAlbum.album.album,\r\n                    type: 'album',\r\n                    id: nextProps.getAlbum.id,\r\n                    cover: nextProps.getAlbum.album.cover\r\n                })\r\n            }\r\n            //When recent list has equal or more than 5 items and no duplicate item in the first position\r\n            else if (this.state.recently.length >= 5 && this.state.recently[0].album !== nextProps.getAlbum.album.album) {\r\n                //Remove the last item\r\n                this.state.recently.splice(-1, 1);\r\n                //Then add an item to the beginning\r\n                this.state.recently.unshift({\r\n                    album: nextProps.getAlbum.album.album,\r\n                    type: 'album',\r\n                    id: nextProps.getAlbum.id,\r\n                    cover: nextProps.getAlbum.album.cover\r\n                });\r\n            }\r\n        }\r\n        //When recent list dosen't have any item\r\n        else {\r\n            this.state.recently.unshift({\r\n                album: nextProps.getAlbum.album.album,\r\n                type: 'album',\r\n                id: nextProps.getAlbum.id,\r\n                cover: nextProps.getAlbum.album.cover\r\n            })\r\n        }\r\n    }\r\n\r\n    //Convert mili-sencond to minute\r\n    converTime(millis) {\r\n        let minutes = Math.floor(millis / 60000);\r\n        let seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n    //Change active of recently list and send items to parent component for changing playing albums to recently album\r\n    changeRecently(index, item) {\r\n        const url = `https://hailduong.github.io/lyduong/react-assignment/spotify-2/apis/album/${item.id}.json`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n\r\n                //Convert duration of all tracks to minute before processing\r\n                let dataChangeType = data.tracks;\r\n                dataChangeType.map((item) => {\r\n                    item.legnth = this.converTime(item.legnth);\r\n                });\r\n\r\n                //Data for sending to parent component\r\n                const sendTracks = {\r\n                    id: item.id,\r\n                    tracks: data,\r\n                    album: item,\r\n                    playing: 0,\r\n                    choosing: index,\r\n                }\r\n                //Send data through props\r\n                this.props.action(sendTracks)\r\n            })\r\n            .catch(e => console.log('error', e));\r\n    }\r\n\r\n    //Change active of menu\r\n    changeMenu(index) {\r\n        this.setState({\r\n            menu: index\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='left-container'>\r\n                <img className='logo' alt='spotify' src='https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png' />\r\n                <br /><br />\r\n\r\n                {/* Menu */}\r\n                <ul className='menu'>\r\n                    <Link to=\"/\">\r\n                        <li className={this.state.menu === 0 ? 'active-menu' : ''} onClick={() => this.changeMenu(0)}>\r\n                            <svg viewBox=\"0 0 512 512\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M448 463.746h-149.333v-149.333h-85.334v149.333h-149.333v-315.428l192-111.746 192 110.984v316.19z\" fill=\"currentColor\"></path></svg>\r\n                            &nbsp; &nbsp; Home\r\n                    </li>\r\n                    </Link>\r\n                    <Link to=\"/search\">\r\n                        <li className={this.state.menu === 1 ? 'active-menu' : ''} onClick={() => this.changeMenu(1)}>\r\n                            <svg viewBox=\"0 0 512 512\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M349.714 347.937l93.714 109.969-16.254 13.969-93.969-109.969q-48.508 36.825-109.207 36.825-36.826 0-70.476-14.349t-57.905-38.603-38.603-57.905-14.349-70.476 14.349-70.476 38.603-57.905 57.905-38.603 70.476-14.349 70.476 14.349 57.905 38.603 38.603 57.905 14.349 70.476q0 37.841-14.73 71.619t-40.889 58.921zM224 377.397q43.428 0 80.254-21.461t58.286-58.286 21.461-80.254-21.461-80.254-58.286-58.285-80.254-21.46-80.254 21.46-58.285 58.285-21.46 80.254 21.46 80.254 58.285 58.286 80.254 21.461z\" fill=\"currentColor\" fillRule=\"evenodd\"></path></svg>\r\n                            &nbsp; &nbsp; Search\r\n                    </li>\r\n                    </Link>\r\n                    <Link to=\"/album\">\r\n                        <li className={this.state.menu === 2 ? 'active-menu' : ''} onClick={() => this.changeMenu(2)}>\r\n\r\n                            <svg viewBox=\"0 0 512 512\" width=\"24\" height=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M291.301 81.778l166.349 373.587-19.301 8.635-166.349-373.587zM64 463.746v-384h21.334v384h-21.334zM192 463.746v-384h21.334v384h-21.334z\" fill=\"currentColor\"></path></svg>\r\n                            &nbsp; &nbsp; Your Library\r\n                    </li >\r\n                    </Link>\r\n                    <p></p>\r\n                    <a href='https://kinespotify.herokuapp.com/' >\r\n                        <li>\r\n                            <svg width=\"24\" height=\"24\" viewBox=\"0 0 80 90\" xmlns=\"http://www.w3.org/2000/svg\"><title>User Icon</title><path d=\"M67.74 61.78l-14.5-8.334c-.735-.422-1.24-1.145-1.385-1.98-.145-.835.088-1.685.638-2.33l5.912-6.93c3.747-4.378 5.81-9.967 5.81-15.737v-2.256c0-6.668-2.792-13.108-7.658-17.67C51.622 1.92 45.17-.386 38.392.054c-12.677.82-22.607 11.772-22.607 24.934v1.483c0 5.77 2.063 11.36 5.81 15.736l5.912 6.933c.55.644.783 1.493.638 2.33-.143.834-.648 1.556-1.383 1.98l-14.494 8.33C4.7 66.077 0 74.15 0 82.844v6.76h3.333v-6.76c0-7.5 4.055-14.46 10.59-18.174l14.5-8.334c1.597-.918 2.692-2.487 3.007-4.302.315-1.815-.19-3.66-1.387-5.06l-5.913-6.936c-3.23-3.775-5.01-8.594-5.01-13.57v-1.484c0-11.41 8.562-20.9 19.488-21.608 5.85-.377 11.415 1.61 15.67 5.598 4.26 3.992 6.605 9.404 6.605 15.24v2.254c0 4.976-1.778 9.796-5.01 13.57l-5.915 6.935c-1.195 1.4-1.7 3.246-1.386 5.06.313 1.816 1.41 3.385 3.008 4.303l14.507 8.338c6.525 3.71 10.58 10.67 10.58 18.17v6.76H80v-6.76c0-8.695-4.7-16.768-12.26-21.063z\" fill=\"currentColor\" fillRule=\"evenodd\"></path></svg>\r\n                            &nbsp; &nbsp; Get access\r\n                    </li>\r\n                    </a>\r\n                </ul>\r\n\r\n                {/* RECENTLY List */}\r\n                <h6 className='recently'>RECENTLY PLAYED</h6>\r\n                <ul className=\"list-unstyled\">\r\n                    {\r\n                        //List recently by map\r\n                        this.state.recently.map((item, index) => {\r\n                            //Condition for getting active class\r\n                            const className = this.state.choosing === index ? 'active-media' : '';\r\n                            return (\r\n                                <li key={index}\r\n                                    onClick={() => this.changeRecently(index, item)}\r\n                                    className={'media ' + className}>\r\n                                    <Link to={\"/album/\" + item.id}>\r\n                                        <div className=\"media-body\">\r\n                                            <h5 className=\"mt-0 mb-1\">{item.album}</h5>\r\n                                            {item.type}\r\n                                        </div>\r\n                                    </Link>\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <div className='bottom-thing'>\r\n                    <h6><FontAwesomeIcon className='icon' icon={faArrowAltCircleDown} /> Install App</h6>\r\n                    <div className='profile'>\r\n                        <img className='avatar' alt='avatar' src={this.state.avatar} />\r\n                        <div className='username'>{this.state.user}</div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //Get avatar and user's name\r\n    componentDidMount = () => {\r\n        const url = `https://raw.githubusercontent.com/hailduong/lyduong/master/react-assignment/spotify/apis/userInfo.json`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    user: data.name,\r\n                    avatar: data.avatar,\r\n                });\r\n            })\r\n            .catch(e => console.log('error', e));\r\n    }\r\n}\r\n\r\nexport default LeftSideBar\r\n","import React, { Component } from 'react';\r\nimport './Middle.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\r\nimport loading from '../../img/loading.gif'\r\n\r\nexport class Middle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      artis: '',\r\n      cover: '',\r\n      year: '',\r\n      track: [],\r\n      show: false,\r\n      isLoad: false\r\n    };\r\n  }\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n    //check if data is exist\r\n    if (nextProps.choosenTrack !== '') {\r\n      //set state when data has received\r\n      this.setState({\r\n        name: nextProps.choosenTrack.album.album.album,\r\n        artis: nextProps.choosenTrack.album.tracks.artist,\r\n        cover: nextProps.choosenTrack.album.album.cover,\r\n        year: nextProps.choosenTrack.album.tracks.year,\r\n        track: nextProps.choosenTrack.album.tracks.tracks.length,\r\n        playing: nextProps.choosenTrack.album.playing\r\n      });\r\n    }\r\n  }\r\n\r\n  // Change state and send data when clicking on Play/Stop button\r\n  toggleShow = () => {\r\n    // When Play button clicked\r\n    if (this.state.show === true) {\r\n      //Set it to Stop state\r\n      this.setState({\r\n        show: false\r\n      });\r\n      //Data for sending to parent component\r\n      const stateSend = {\r\n        album: this.props.choosenTrack.album.album,\r\n        playing: 0,\r\n        tracks: this.props.choosenTrack.album.tracks\r\n      }\r\n      //Send data through props\r\n      this.props.update(stateSend);\r\n    }\r\n\r\n    // When Stop button clicked\r\n    else if (this.state.show === false) {\r\n      //Set it to Play state\r\n      this.setState({\r\n        show: true\r\n      });\r\n      //Data for sending to parent component\r\n      const stateSend = {\r\n        album: this.props.choosenTrack.album.album,\r\n        playing: 0,\r\n        tracks: this.props.choosenTrack.album.tracks\r\n      }\r\n      //Send data through props\r\n      this.props.update(stateSend);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    //Loading view will display when data is getting\r\n    if (this.state.isLoad === false) {\r\n      return (\r\n        <div className='loading'>\r\n          <div className='img-load'>\r\n            <img className='imgLoad' src={loading} alt='loading' />\r\n            <h2>Loading...</h2>\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n      //View after data is gotten\r\n    }\r\n    else {\r\n      return (\r\n        <div className='middle'>\r\n          <img className='cover' alt='cover' src={this.state.cover} />\r\n          <h2>{this.state.name}</h2>\r\n          <h6 className='actor'>{this.state.artis}</h6>\r\n          {/* Toggle PLay/Stop button */}\r\n          {this.state.show ? <button onClick={this.toggleShow} type=\"button\" className=\"btn btn-success\">PLAY</button> : <button onClick={this.toggleShow} type=\"button\" className=\"btn btn-danger\">STOP</button>}\r\n          <br />\r\n          <h6 className='actor'>{this.state.year} . {this.state.track} SONGS</h6>\r\n          <div className='remove'>\r\n            <h6>REMOVE FROM YOUR LIBRARY</h6>\r\n            <FontAwesomeIcon className='icon' icon={faEllipsisH} color=\"#ddd\" />\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n\r\n  // Re-get data by album ID, use this function for reload at the same Url, we still have link's ID\r\n  componentDidMount = () => {\r\n    const url = `https://hailduong.github.io/lyduong/react-assignment/spotify-2/apis/album/${this.props.id}.json`;\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          name: data.name,\r\n          artis: data.artist,\r\n          cover: data.covers.large,\r\n          year: data.year,\r\n          track: data.tracks.length,\r\n          isLoad: true\r\n        });\r\n      }, () => console.log(this.state))\r\n      .catch(e => console.log('error', e));\r\n  }\r\n}\r\n\r\nexport default Middle\r\n","import React, { Component } from 'react';\r\nimport './RigthSide.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCopyright, faMusic } from '@fortawesome/free-solid-svg-icons';\r\nimport loading from '../../img/loading.gif'\r\n\r\nexport class RightSide extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tracks: [],\r\n            playing: 0,\r\n            albumID: this.props.id,\r\n            album: '',\r\n            listTracks: '',\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n        //Check if data is exist\r\n        if (nextProps.choosenTrack !== '') {\r\n            //Get playing track\r\n            this.setState({\r\n                playing: nextProps.choosenTrack.album.playing\r\n            });\r\n        }\r\n        //If Play button is hitten\r\n        if (nextProps.inputVal === true) {\r\n            this.setState({\r\n                playing: 0,\r\n            });\r\n        }\r\n        //If Stop button is hitten\r\n        else if (nextProps.inputVal === false) {\r\n            this.setState({\r\n                playing: '',\r\n            });\r\n        }\r\n    }\r\n\r\n    //Convert track's duration to minute\r\n    converTime(millis) {\r\n        let minutes = Math.floor(millis / 60000);\r\n        let seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n    //Get track info and send to parent conponent when clicking on a track\r\n    getTracks(index) {\r\n        //Set active class for that track\r\n        this.setState({\r\n            playing: index\r\n        }, () => {\r\n            //Data for sending to parent component\r\n            if (this.props.choosenTrack === \"\") {\r\n                console.log(this.state);\r\n                const stateSend = {\r\n                    album: this.state.album,\r\n                    playing: this.state.playing,\r\n                    tracks: this.state.listTracks\r\n                }\r\n                //Send data through props\r\n                this.props.update(stateSend);\r\n            }\r\n            else {\r\n                const stateSend = {\r\n                    album: this.props.choosenTrack.album.album,\r\n                    playing: this.state.playing,\r\n                    tracks: this.props.choosenTrack.album.tracks\r\n                }\r\n                //Send data through props\r\n                this.props.update(stateSend);\r\n            }\r\n\r\n        });\r\n    }\r\n    render() {\r\n        //Loading view will appear when data is getting\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div className='loading'>\r\n                    <div className='img-load'>\r\n                        <img className='imgLoad' src={loading} alt='loading' />\r\n                        <h2>Loading...</h2>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        //View after data is gotten\r\n        else {\r\n            return (\r\n                <div className='right-side'>\r\n                    <div className='hide-bar'>\r\n                        <ul>\r\n                            {//Get list tracks\r\n                                this.state.tracks.map((item, index) => {\r\n                                    const className = this.state.playing === index ? 'active' : '';\r\n                                    return (\r\n                                        <li key={index}\r\n                                            onClick={() => this.getTracks(index)}\r\n                                            className={className}>\r\n                                            <FontAwesomeIcon className='icon' icon={faMusic} />\r\n                                            <div className='song-name'>{item.title}</div>\r\n                                            <div className='duration'>{item.legnth}</div>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    <div className='copyright'>\r\n                        <p><FontAwesomeIcon className='icon' icon={faCopyright} color=\"#ddd\" /> 1999 ACT Music + Vision GmbH + Co KG</p>\r\n                        <p><FontAwesomeIcon className='icon' icon={faCopyright} color=\"#ddd\" /> 1999 ACT Music + Vision GmbH + Co KG</p>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    //Re-get data when reload at the same url\r\n    componentDidMount = () => {\r\n        //Get playing album for sending data\r\n        console.log(this.props.choosenTrack);\r\n        if (this.props.choosenTrack === \"\") {\r\n            const url = `https://raw.githubusercontent.com/hailduong/lyduong/master/react-assignment/spotify-2/apis/yourLibrary.json`;\r\n            fetch(url)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.setState({\r\n                        album: data[this.props.id - 1]\r\n                    });\r\n                })\r\n                .catch(e => console.log('error', e));\r\n        }\r\n\r\n        // Get list tracks by url ID\r\n        const url = `https://hailduong.github.io/lyduong/react-assignment/spotify-2/apis/album/${this.props.id}.json`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                //Convert track's duration to minute\r\n                let dataChangeType = data.tracks;\r\n                dataChangeType.map((item) => {\r\n                    item.legnth = this.converTime(item.legnth);\r\n                })\r\n                //Set state\r\n                this.setState({\r\n                    tracks: data.tracks,\r\n                    listTracks: data,\r\n                    isLoad: true\r\n                });\r\n            })\r\n            .catch(e => console.log('error', e));\r\n    }\r\n}\r\n\r\nexport default RightSide\r\n","import React, { Component } from 'react';\r\nimport Middle from '../component/Middle/Middle';\r\nimport RightSide from '../component/RightSide/RightSide';\r\n\r\nexport class ListTrack extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPlay: '',\r\n            choosenTrack: ''\r\n        };\r\n        this.playStop = this.playStop.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            choosenTrack: nextProps.inputVal,\r\n            isPlay: ''\r\n        })        \r\n    }\r\n\r\n    playStop(dataFromChild) {\r\n        if (dataFromChild === true) {\r\n            this.setState({\r\n                isPlay: dataFromChild,\r\n            }, () => console.log(this.state));\r\n        }\r\n        else if (dataFromChild === false) {\r\n            this.setState({\r\n                isPlay: dataFromChild,\r\n            }, () => console.log(this.state));\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const style = {\r\n            height: '100%',\r\n            width: '100%'\r\n        };\r\n        return (\r\n            <div style={style} className='row'>\r\n                <div className='col-md-5'>\r\n                    <Middle id={this.props.match.params.id} choosenTrack={this.state.choosenTrack} update={this.props.update} />\r\n                </div>\r\n                <div className='col-md-7'>\r\n                    <RightSide id={this.props.match.params.id} choosenTrack={this.state.choosenTrack} inputVal={this.state.isPlay} update={this.props.update} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTrack\r\n","import React, { Component } from 'react';\r\nimport './Bottom.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheck, faRandom, faStepBackward, faStepForward, faPlayCircle, faRetweet, faListAlt, faDesktop, faVolumeUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport class Bottom extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            artist: '',\r\n            cover: '',\r\n            tracks: [],\r\n            track: '',\r\n            album: [],\r\n            playing: '',\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //check if data is exist\r\n        if (nextProps.inputVal.album !== \"\") {\r\n            //set state when data has received\r\n            this.setState({\r\n                track: nextProps.inputVal.album.tracks[0],\r\n                artist: nextProps.inputVal.album.tracks.artist,\r\n                tracks: nextProps.inputVal.album.tracks.tracks,\r\n                cover: nextProps.inputVal.album.album.cover,\r\n                playing: nextProps.inputVal.album.playing,\r\n                track: nextProps.inputVal.album.tracks.tracks[nextProps.inputVal.album.playing]\r\n            });\r\n        }\r\n    }\r\n\r\n    //Change playing track by click on Next or Previous button\r\n    changeTrack(clickBtn) {\r\n        //Next button\r\n        if (clickBtn === 'next') {\r\n            if (this.state.track.number < this.state.tracks.length) {\r\n                this.setState({\r\n                    track: this.state.tracks[this.state.track.number],\r\n                    playing: this.state.playing + 1\r\n                },\r\n                    () => {\r\n                        //Data for sending to parent component\r\n                        const stateSend = {\r\n                            album: this.props.inputVal.album.album,\r\n                            playing: this.state.playing,\r\n                            tracks: this.props.inputVal.album.tracks\r\n                        }\r\n                        //Send data through props\r\n                        this.props.action(stateSend)\r\n                    }\r\n                );\r\n\r\n            }\r\n        }\r\n        //Previous button\r\n        else if (clickBtn === 'prev') {\r\n            if (this.state.track.number - 1 > 0) {\r\n                this.setState({\r\n                    track: this.state.tracks[this.state.track.number - 2],\r\n                    playing: this.state.playing - 1\r\n                },\r\n                    () => {\r\n                        //Data for sending to parent component\r\n                        const stateSend = {\r\n                            album: this.props.inputVal.album.album,\r\n                            playing: this.state.playing,\r\n                            tracks: this.props.inputVal.album.tracks\r\n                        }\r\n                        //Send data through props\r\n                        this.props.action(stateSend)\r\n                    }\r\n                );\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        //style for setting cover on player bar\r\n        const coverImg = {\r\n            backgroundImage: `url(${this.state.cover})`\r\n        };\r\n        return (\r\n\r\n            <div className='bottom row'>\r\n                {/* Info side */}\r\n                <div className='info col-md-3'>\r\n                    <div style={coverImg} className='cover'>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h5>{this.state.track.title}</h5>\r\n                        <h6>{this.state.artist}</h6>\r\n                    </div>\r\n                    <FontAwesomeIcon className='icon checkIcon' icon={faCheck} color=\"#439e65\" />\r\n                </div>\r\n\r\n                {/* Control side */}\r\n                <div className='col-md-6 play-bar'>\r\n                    <div className='control-button'>\r\n                        <FontAwesomeIcon className='icon' icon={faRandom} />\r\n                        <FontAwesomeIcon onClick={() => { this.changeTrack('prev') }} className='icon' icon={faStepBackward} />\r\n                        <FontAwesomeIcon onClick={() => { console.log(this.props) }} className='icon play-btn' icon={faPlayCircle} />\r\n                        <FontAwesomeIcon onClick={() => { this.changeTrack('next') }} className='icon' icon={faStepForward} />\r\n                        <FontAwesomeIcon className='icon' icon={faRetweet} />\r\n\r\n                    </div>\r\n                    <div className='bar'>\r\n                        <span>00:00</span>\r\n                        <div className=\"progress\">\r\n                            <div className=\"progress-bar w-75\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                        <span>{this.state.track.legnth}</span>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* Option side */}\r\n                <div className='col-md-3 control-thing'>\r\n                    <FontAwesomeIcon className='icon' icon={faListAlt} />\r\n                    <FontAwesomeIcon className='icon' icon={faDesktop} />\r\n                    <FontAwesomeIcon className='icon' icon={faVolumeUp} />\r\n                    <div className=\"progress\">\r\n                        <div className=\"progress-bar w-50\" role=\"progressbar\" aria-valuenow=\"75\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Bottom\r\n","import React, { Component } from 'react';\r\nimport './Album.css';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport loading from '../../img/loading.gif'\r\n\r\nexport class Album extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            album: [],\r\n            isLoad: false\r\n        };\r\n    }\r\n\r\n\r\n\r\n    //Convert mili-sencond to minute\r\n    converTime(millis) {\r\n        let minutes = Math.floor(millis / 60000);\r\n        let seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n    // Get list tracks by album ID\r\n    getListTrack(id, item) {\r\n        const url = `https://hailduong.github.io/lyduong/react-assignment/spotify-2/apis/album/${id}.json`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                //Convert duration of all tracks to minute before processing\r\n                let dataChangeType = data.tracks;\r\n                dataChangeType.map((item) => {\r\n                    item.legnth = this.converTime(item.legnth);\r\n                })\r\n                //Data for sending to parent component\r\n                const sendTracks = {\r\n                    id: id,\r\n                    tracks: data,\r\n                    album: item,\r\n                    playing: 0\r\n                }\r\n                //Send data through props\r\n                this.props.action(sendTracks)\r\n            })\r\n            .catch(e => console.log('error', e));\r\n    }\r\n\r\n    render() {\r\n\r\n        //Loading view appears while data is getting from API\r\n        if (this.state.isLoad === false) {\r\n            return (\r\n                <div className='loading'>\r\n                    <div className='img-load'>\r\n                        <img className='imgLoad' src={loading} alt='loading' />\r\n                        <h2>Loading...</h2>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n        //View after get data from API\r\n        else {\r\n            return (\r\n                <div className='album'>\r\n                    <h1>Albums</h1>\r\n                    <div className='row'>\r\n                        {//Get list albums by map\r\n                            this.state.album.map((item, index) => {\r\n                                return (\r\n                                    <div key={index} className='col-md-2'>\r\n                                        <Link to={\"/album/\" + (index + 1)} >\r\n                                            <div onClick={() => this.getListTrack(index + 1, item)} className=\"card\">\r\n                                                <div className='album-wrap'>\r\n                                                    <img className=\"card-img-top\" src={item.cover} alt=\"Cover\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"card-body\">\r\n                                                    <h6 className=\"card-title\">{item.album}</h6>\r\n                                                    <p className=\"card-text\">Huong Thanh</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    // Get item from API\r\n    componentDidMount = () => {\r\n        const url = `https://raw.githubusercontent.com/hailduong/lyduong/master/react-assignment/spotify-2/apis/yourLibrary.json`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({\r\n                    album: data,\r\n                    isLoad: true\r\n                });\r\n            })\r\n            .catch(e => console.log('error', e));\r\n    }\r\n}\r\n\r\n\r\nexport default Album\r\n","import React, { Component } from 'react';\r\nimport './Album.css';\r\nimport logo from '../../img/spoHome.gif'\r\n\r\nexport class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className='home'>\r\n        <h1>Welcome to Spotify</h1>\r\n        <img alt='logo' src={logo}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport { Router, Route, Link } from \"react-router-dom\";\r\n\r\nconst ListAlbums = props => {\r\n    return (\r\n        <div className='row'>\r\n            {//Get list albums through props\r\n                props.items.map((item, index) => {\r\n                    return (\r\n                        <div key={item.id} className='col-md-2'>\r\n                            <Link to=\"/search\">\r\n                                <div className=\"card\">\r\n                                    <img className=\"card-img-top\" src={item.images[0].url} alt=\"Cover\" />\r\n                                    <div className=\"card-body\">\r\n                                        <h6 className=\"card-title\">{item.name}</h6>\r\n                                        <p className=\"card-text\">{item.artists[0].name}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                }\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListAlbums\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst ListTracks = props => {\r\n    return (\r\n        <div className='right-side'>\r\n            <div className='hide-bar'>\r\n                <ul>\r\n                    {//Get list tracks through props then map it to every item\r\n                        props.items.map((item) => {\r\n                        return (\r\n                            <li key={item.id}>\r\n                                <FontAwesomeIcon className='icon' icon={faMusic} />\r\n                                <div className='song-name'>{item.name}</div>\r\n                                <div className='duration'>{item.duration_ms}</div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListTracks","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\nconst TopResult = props => {\r\n    return (\r\n        <div className='row'>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"card\">\r\n                    {/* Get the first album through props */}\r\n                    <img className=\"card-img-top\" src={props.firstAlbum.images[0].url} alt=\"Cover\" />\r\n                    <div className=\"card-body\">\r\n                        <h6 className=\"card-title\">{props.firstAlbum.name}</h6>\r\n                        <p className=\"card-text\">{props.firstAlbum.artists[0].name}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n                <div className='right-side'>\r\n                    <div className='hide-bar'>\r\n                        <ul>\r\n                            {//Get list tracks through props then map it to every item\r\n                                props.tracks.slice(0, 5).map((item) => {\r\n                                return (\r\n                                    <li key={item.id}>\r\n                                        <FontAwesomeIcon className='icon' icon={faMusic} />\r\n                                        <div className='song-name'>{item.name}</div>\r\n                                        <div className='duration'>{item.duration_ms}</div>\r\n                                    </li>\r\n                                )\r\n                            })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopResult\r\n","import React, { Component } from 'react';\r\nimport './Search.css';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport searched from '../../img/seaching.gif';\r\n\r\n//Component\r\nimport ListAlbums from './ListAlbums';\r\nimport ListTracks from './ListTracks';\r\nimport TopResult from './TopResult';\r\n\r\nexport class Search extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            album: '',\r\n            tracks: '',\r\n            firstAlbum: '',\r\n            position: 1,\r\n            isSearch: false,\r\n            isFound: false,\r\n        };\r\n        //Set active class for menu after reload match url \r\n        if(window.location.pathname.startsWith(\"/search/songs\")){\r\n            this.state.position = 2;\r\n        }\r\n        else if (window.location.pathname.startsWith(\"/search/albums\")){\r\n            this.state.position = 3;\r\n        }\r\n        else {\r\n            this.state.position = 1;\r\n        }\r\n    }\r\n\r\n    //Convert track's duration to minute\r\n    converTime(millis) {\r\n        let minutes = Math.floor(millis / 60000);\r\n        let seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n    //Change tab's position \r\n    changePosotion(index) {\r\n        this.setState({\r\n            position: index\r\n        });\r\n    }\r\n\r\n    //Search function\r\n    searchSpotify = (e) => {\r\n        //Execute function when hit Enter button\r\n        if (e.key === \"Enter\") {\r\n            //Reset state when start to search and set state to \"Seaching\"\r\n            this.setState({\r\n                album: '',\r\n                tracks: '',\r\n                firstAlbum: '',\r\n                isSearch: true\r\n            },\r\n                //After that call search API\r\n                () => {\r\n                    //get access token\r\n                    const token = this.props.accessToken;\r\n                    console.log(token);\r\n                    const url = `https://api.spotify.com/v1/search?query=${this.searchInput.value}&limit=20&type=album,track`;\r\n                    fetch(url, {\r\n                        //config header\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\",\r\n                            \"Accept\": \"application/json\",\r\n                            \"Authorization\": `Bearer ${token}`,\r\n                        }\r\n                    })\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            console.log(data.albums.items);\r\n                            //when items are not found\r\n                            if (data.albums.items.length < 1 || data.tracks.items.length < 1) {\r\n                                this.setState({\r\n                                    isFound: false,\r\n                                    firstAlbum: \"Haha thứ ngu\"\r\n                                }, () => console.log(this.state))\r\n                            }\r\n                            else {\r\n                                //Convert track's duration to minute\r\n                                let dataChangeType = data.tracks.items;\r\n                                dataChangeType.map((item) => {\r\n                                    item.duration_ms = this.converTime(item.duration_ms);\r\n                                });\r\n                                //When found any items\r\n                                this.setState({\r\n                                    album: data.albums.items,\r\n                                    tracks: data.tracks.items,\r\n                                    firstAlbum: data.albums.items[0],\r\n                                    isFound: true,\r\n                                    isSearch: false\r\n                                }, () => console.log(this.state))\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            //When access token expire. redirect to login page to get a new one\r\n                            window.location.replace(\"https://kinespotify.herokuapp.com/\");\r\n                            console.log('Haha thứ ngu! Code để lỗi');\r\n                            console.log('error', e)\r\n                        });\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        // View while Search function is executing\r\n        const searching = (\r\n            <div className='searching'>\r\n                <div className='img-load'>\r\n                    <img className='img-size' alt='seaching' src={searched}/>\r\n                    <h2>Searching...</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n        //View before Search function executed\r\n        const beforeSearch = (\r\n            <div className='intro'>\r\n                <h1> Search Spotify</h1>\r\n                <h6>Find your favorite songs, artists, albums, podcasts and playlists</h6>\r\n            </div>\r\n        );\r\n        // View when API not found any items\r\n        const notFound = (\r\n            <div className='notFound'>\r\n                <h1>Not found</h1>\r\n            </div>\r\n        );\r\n\r\n        //View when API return any items\r\n        const itemFound = (\r\n            <div>\r\n                <div className='search-container'>\r\n                    <ul className='menu-search'>\r\n                        <Link className={this.state.position === 1 ? 'active' : ''} onClick={() => this.changePosotion(1)} to=\"/search\">\r\n                            <li>Top Results</li>\r\n                        </Link>\r\n                        <Link className={this.state.position === 2 ? 'active' : ''} onClick={() => this.changePosotion(2)} to=\"/search/songs\">\r\n                            <li>Songs</li>\r\n                        </Link>\r\n                        <Link className={this.state.position === 3 ? 'active' : ''} onClick={() => this.changePosotion(3)} to=\"/search/albums\">\r\n                            <li>Albums</li >\r\n                        </Link>\r\n                    </ul>\r\n                </div>\r\n                <div className='search-content'>\r\n                    <Switch>\r\n                        {//App will check if has data, then redirect to component\r\n\r\n                            //Searched albums component\r\n                            this.state.album !== '' && this.state.tracks !== '' ? <Route path=\"/search/albums\" render={() => <ListAlbums items={this.state.album} />} /> : <div></div>\r\n                        }\r\n                        {\r\n                            //Searched tracks component\r\n                            this.state.tracks !== '' && <Route path=\"/search/songs\" render={() => <ListTracks items={this.state.tracks} />} />\r\n                        }\r\n                        {\r\n                            //Top result component\r\n                            this.state.album !== '' && <Route path=\"/search\" render={() => <TopResult firstAlbum={this.state.firstAlbum} tracks={this.state.tracks} />} />\r\n                        }\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n        return (\r\n            <div className='search'>\r\n\r\n                {/* Search bar */}\r\n                <div className=\"input-group\">\r\n                    <input type=\"text\" placeholder=\"Start typing ... (hit Enter to search)\"\r\n                        ref={(input) => { this.searchInput = input; }}\r\n                        spellCheck=\"false\"\r\n                        onKeyPress={this.searchSpotify}\r\n                    />\r\n                </div>\r\n\r\n                {\r\n                    //Change view when API respone or not\r\n                    this.state.firstAlbum === '' ?\r\n                    <div className='containerSearching'>\r\n                        {// change view when status is seaching or not\r\n                            this.state.isSearch === true ? searching : beforeSearch\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        {// change view when status is found or not found\r\n                            this.state.isFound === true ? itemFound : notFound\r\n                        }\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    //Focus to search field after complete render\r\n    componentDidMount() {\r\n        this.searchInput.focus();\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport SpotifyWebApi from 'spotify-web-api-js';\n//Component\nimport LeftSideBar from './component/LeftSide/LeftSideBar';\nimport ListTrack from './component/ListTrack';\nimport Bottom from './component/Bottom/Bottom';\nimport Album from './component/Album/Album';\nimport Home from './component/Album/Home';\nimport Search from './component/Search/Search';\nconst spotifyApi = new SpotifyWebApi();\nclass App extends Component {\n\n  constructor() {\n    super()\n    //get hashParam for access token\n    const params = this.getHashParams();\n    //get access token\n    const token = params.access_token;\n    spotifyApi.setAccessToken(token);\n    console.log(token)\n    this.state = {\n      album: '',\n      token: token\n    };\n\n    //callback getAlbum function for getting data from child component\n    this.getAlbum = this.getAlbum.bind(this);\n    console.log(this.state);\n  }\n\n  //getAlbum function for getting data from child component\n  getAlbum(dataFromChild) {\n    this.setState({\n      album: dataFromChild,\n    });\n  }\n\n  //get hashParam for access token\n  getHashParams() {\n    let hashParams = {};\n    let e, r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1);\n    e = r.exec(q)\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n    return hashParams;\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App row\">\n          <div className='col-md-2'>\n            <LeftSideBar getAlbum={this.state.album} action={this.getAlbum} />\n          </div>\n          <div className='col-md-10'>\n            <Switch >\n              <Route exact path=\"/\" component={Home} />\n              <Route path=\"/search\" render={() => <Search accessToken={this.state.token} />} />\n              <Route path=\"/album/:id\" render={(props) => <ListTrack {...props} inputVal={this.state} update={this.getAlbum} />} />\n              <Route path=\"/album\">\n                <Album action={this.getAlbum} />\n              </Route>\n            </Switch >\n\n          </div>\n          <div className='player-bar'>\n            <Bottom inputVal={this.state} action={this.getAlbum} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}